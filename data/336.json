{"error": null, "result": {"nr": 336, "upvote_ids": [], "change_log": [{"type": "create", "when": "2015-04-21T03:29:54Z", "uid": "i6rwsr9cEcQ", "data": "i8qr6o6de5l5tt", "anon": "no"}, {"type": "update", "when": "2015-04-22T06:49:42Z", "uid": "hsfa0sawctb6v4", "data": "i8sdrhadhdm6lb", "anon": "no"}, {"to": "i8qr6nym8pa5tp", "when": "2015-05-08T02:21:26Z", "anon": "full", "type": "followup"}], "q_edits": [], "i_edits": [], "unique_views": 58, "bookmarked": 4, "config": {}, "history": [{"subject": "一个关于TLB的坑……", "content": "<p>事情源于写clock算法的测试部分&#xff1a;</p>\n<p><br />//clock环的初始状态&#xff0c;A表示access位已标记&#xff0c;W表示Dirty位已标记&#xff0c;*表示clock指针所在位置&#xff1a;</p>\n<p>                                          //0x1000*[AW] - 0x2000[AW] - 0x3000[AW] - 0x4000[AW]<br />//cprintf(&#34;read Virt Page e in ex_clock_check_swap\\n&#34;);<br />c = *(unsigned char *)0x5000;<br />assert(pgfault_num==5); // swap out 0x1000 , 这句话结束后&#xff0c;Clock环应该是这样&#xff1a;</p>\n<p>                                         //0x2000*[--] - 0x3000[--] - 0x4000[--] - 0x5000[A-]&#xff0c;经测试&#xff0c;与实际情况一致<br />//cprintf(&#34;read Virt Page b in ex_clock_check_swap\\n&#34;);<br />c = *(unsigned char *)0x2000; //访问0x2000&#xff0c;执行结束后&#xff0c;Clock环应该是这样&#xff1a;</p>\n<p>                                          //0x2000*[A-] - 0x3000[--] - 0x4000[--] - 0x5000[A-]&#xff0c;经测试&#xff0c;与实际情况一致&#xff0c;注意&#xff01;&#xff01;这里没出错&#xff01;&#xff01;&#xff01;<br />assert(pgfault_num==5);<br />//cprintf(&#34;read Virt Page a in ex_clock_check_swap\\n&#34;);<br />c = *(unsigned char *)0x1000;<br />assert(pgfault_num==6); // swap out 0x3000, 这句话结束后&#xff0c;Clock环应该是这样&#xff1a;</p>\n<p>                                          //0x2000[--] - 0x1000[A-] - 0x4000*[--] - 0x5000[--]&#xff0c;经测试&#xff0c;与实际情况一致<br />//cprintf(&#34;read Virt Page b in ex_clock_check_swap\\n&#34;);<br />c = *(unsigned char *)0x2000; //访问0x2000&#xff0c;这句话结束后&#xff0c;Clock环应该是这样&#xff1a;</p>\n<p>                                          //0x2000[A-] - 0x1000[A-] - 0x4000*[--] - 0x5000[--]<br /> //但是&#xff01;&#xff01;&#xff01;实际情况是&#xff1a; /0x2000[--] - 0x1000[A-] - 0x4000*[--] - 0x5000[--]</p>\n<p></p>\n<p>写lab4的时候被这个问题坑了好久&#xff08;lab3的时候不知怎么的没出事&#xff0c;写lab4的时候爆发了……&#xff09;</p>\n<p></p>\n<p>出现问题的原因如下&#xff1a;</p>\n<p>       根据Intel的相关文档&#xff0c;改写内存中的页表项时&#xff0c;并不会自动更新TLB里的项目&#xff08;需要手动更新&#xff09;。因此&#xff0c;在clock算法中将Access位和Dirty位置0时如果不刷新对应的TLB项的话&#xff0c;TLB里的对应位依然是1。当下次访问该页面的时候&#xff0c;CPU会先查看TLB中的访问位&#xff0c;发现是1&#xff0c;于是认为该页表项不需要更新——于是&#xff0c;内存里的页表项Access位依然是0……至于上面问题中第一次访问0x2000时&#xff0c;Access位会被更新而不会出BUG&#xff0c;大概是因为那个时候CPU正好把TLB刷新了一下………好坑………</p>\n<p></p>\n<p>解决方案&#xff1a;Access位和Dirty位置零的时候刷新TLB。&#xff08;据某大神说&#xff0c;页面换入换出的消耗已经很大了&#xff0c;不在乎这么点效率……&#xff09;</p>\n<p></p>\n<p>分享在这里&#xff0c;希望能帮大家省点时间…………</p>\n<p></p>\n<p>PS&#xff1a;感谢某已经退课的大神的指点Orz</p>", "created": "2015-04-22T06:49:42Z", "uid": "hsfa0sawctb6v4", "anon": "no"}, {"subject": "一个关于TLB的坑……", "content": "<p>事情源于写clock算法的测试部分&#xff1a;</p>\n<p><br />//clock环的初始状态&#xff0c;A表示access位已标记&#xff0c;W表示Dirty位已标记&#xff0c;*表示clock指针所在位置&#xff1a;</p>\n<p>                                          //0x1000*[AW] - 0x2000[AW] - 0x3000[AW] - 0x4000[AW]<br />//cprintf(&#34;read Virt Page e in ex_clock_check_swap\\n&#34;);<br />c = *(unsigned char *)0x5000;<br />assert(pgfault_num==5); // swap out 0x1000 , 这句话结束后&#xff0c;Clock环应该是这样&#xff1a;</p>\n<p>                                         //0x2000*[--] - 0x3000[--] - 0x4000[--] - 0x5000[A-]&#xff0c;经测试&#xff0c;与实际情况一致<br />//cprintf(&#34;read Virt Page b in ex_clock_check_swap\\n&#34;);<br />c = *(unsigned char *)0x2000; //访问0x2000&#xff0c;执行结束后&#xff0c;Clock环应该是这样&#xff1a;</p>\n<p>                                          //0x2000*[A-] - 0x3000[--] - 0x4000[--] - 0x5000[A-]&#xff0c;经测试&#xff0c;与实际情况一致&#xff0c;注意&#xff01;&#xff01;这里没出错&#xff01;&#xff01;&#xff01;<br />assert(pgfault_num==5);<br />//cprintf(&#34;read Virt Page a in ex_clock_check_swap\\n&#34;);<br />c = *(unsigned char *)0x1000;<br />assert(pgfault_num==6); // swap out 0x3000, 这句话结束后&#xff0c;Clock环应该是这样&#xff1a;</p>\n<p>                                          //0x2000[--] - 0x1000[A-] - 0x4000*[--] - 0x5000[--]&#xff0c;经测试&#xff0c;与实际情况一致<br />//cprintf(&#34;read Virt Page b in ex_clock_check_swap\\n&#34;);<br />c = *(unsigned char *)0x2000; //访问0x2000&#xff0c;这句话结束后&#xff0c;Clock环应该是这样&#xff1a;</p>\n<p>                                          //0x2000[A-] - 0x1000[A-] - 0x4000*[--] - 0x5000[--]<br /> //但是&#xff01;&#xff01;&#xff01;实际情况是&#xff1a; /0x2000[--] - 0x1000[A-] - 0x4000*[--] - 0x5000[--]</p>\n<p></p>\n<p>写lab4的时候被这个问题坑了好久&#xff08;lab3的时候不知怎么的没出事&#xff0c;写lab4的时候爆发了……&#xff09;</p>\n<p></p>\n<p>出现问题的原因如下&#xff1a;</p>\n<p>       根据Intel的相关文档&#xff0c;改写内存中的页表项时&#xff0c;并不会自动更新TLB里的项目&#xff08;需要手动更新&#xff09;。因此&#xff0c;在clock算法中将Access位和Dirty位置0时如果不刷新对应的TLB项的话&#xff0c;TLB里的对应位依然是1。当下次访问该页面的时候&#xff0c;CPU会先查看TLB中的访问位&#xff0c;发现是1&#xff0c;于是认为该页表项不需要更新——于是&#xff0c;内存里的页表项Access位依然是0……至于上面问题中第一次访问0x2000时&#xff0c;Access位会被更新而不会出BUG&#xff0c;大概是因为那个时候CPU正好把TLB刷新了一下………好坑………</p>\n<p></p>\n<p>解决方案&#xff1a;Access位和Dirty位置零的时候刷新TLB。&#xff08;据某大神说&#xff0c;页面换入换出的消耗已经很大了&#xff0c;不在乎这么点效率……&#xff09;</p>\n<p></p>\n<p>分享在这里&#xff0c;希望能帮大家省点时间…………</p>\n<p></p>\n<p>PS&#xff1a;感谢某已经退课的大神的指点Orz</p>", "created": "2015-04-21T03:29:53Z", "uid": "i6rwsr9cEcQ", "anon": "no"}], "data": {"embed_links": []}, "request_instructor_me": false, "folders": ["lab3"], "type": "note", "tag_good": [{"class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0"], "admin": true, "role": "instructor", "facebook_id": null, "us": false, "name": "Yu Chen", "id": "hcrrjuyequh4bt", "photo": "1378950179_35.png"}], "tag_good_arr": ["hcrrjuyequh4bt"], "created": "2015-04-21T03:29:53Z", "t": 1433500373510, "id": "i8qr6nym8pa5tp", "status": "active", "default_anonymity": "no", "my_favorite": false, "bucket_order": 2, "is_bookmarked": false, "is_tag_good": false, "bucket_name": "Today", "no_answer_followup": 0, "children": [{"no_upvotes": 0, "bucket_name": "Today", "bucket_order": 2, "updated": "2015-05-08T02:21:26Z", "config": {}, "anon": "full", "data": {"embed_links": null}, "folders": [], "subject": "<p>某已经退课的大神 Org</p>", "children": [], "type": "followup", "no_answer": 0, "created": "2015-05-08T02:21:26Z", "id": "i9ez842vjdn18z"}], "request_instructor": 0, "tags": ["lab3", "student", "unanswered"], "s_edits": [], "num_favorites": 0}, "aid": "iajh3z7qdw24v8"}