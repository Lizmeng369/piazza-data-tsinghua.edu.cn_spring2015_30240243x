{"aid": "inbvk0dvgcr6ld", "result": {"folders": ["lab5"], "unique_views": 16, "no_answer": 1, "change_log": [{"data": "inbi4jmohlq48j", "anon": "no", "when": "2016-04-22T09:15:20Z", "uid": "i0f24oie8102cr", "type": "create"}, {"data": "inbi72enonm471", "anon": "no", "when": "2016-04-22T09:17:18Z", "uid": "i0f24oie8102cr", "type": "update"}, {"data": "inbi8lehk7730y", "anon": "no", "when": "2016-04-22T09:18:29Z", "uid": "i0f24oie8102cr", "type": "update"}], "upvote_ids": [], "id": "inbi4jmmr0r48i", "bookmarked": 3, "no_answer_followup": 0, "i_edits": [], "is_bookmarked": false, "children": [], "request_instructor_me": false, "nr": 821, "bucket_order": 2, "config": {}, "status": "active", "tags": ["lab5", "student", "unanswered"], "num_favorites": 0, "bucket_name": "Today", "q_edits": [], "data": {"embed_links": []}, "request_instructor": 0, "created": "2016-04-22T09:15:20Z", "is_tag_good": false, "type": "question", "s_edits": [], "my_favorite": false, "default_anonymity": "no", "t": 1461339077107, "tag_good": [], "tag_good_arr": [], "history": [{"content": "<p>在proc.c 中 init_main中&#xff1a;&#xff08;lab5&#xff09;</p>\n<pre>static int\ninit_main(void *arg) {\n    size_t nr_free_pages_store = nr_free_pages();\n    size_t kernel_allocated_store = kallocated();\n\n    int pid = kernel_thread(user_main, NULL, 0);\n    if (pid &lt;= 0) {\n        panic(&#34;create user_main failed.\\n&#34;);\n    }\n\n    while (do_wait(0, NULL) == 0) {\n        schedule();\n    }\n\n    cprintf(&#34;all user-mode processes have quit.\\n&#34;);\n    assert(initproc-&gt;cptr == NULL &amp;&amp; initproc-&gt;yptr == NULL &amp;&amp; initproc-&gt;optr == NULL);\n    assert(nr_process == 2);\n    assert(list_next(&amp;proc_list) == &amp;(initproc-&gt;list_link));\n    assert(list_prev(&amp;proc_list) == &amp;(initproc-&gt;list_link));\n    //assert(nr_free_pages_store == nr_free_pages());\n    //assert(kernel_allocated_store == kallocated());\n    cprintf(&#34;init check memory pass.\\n&#34;);\n    return 0;\n}</pre>\n<p>注释掉的有</p>\n<pre>assert(kernel_allocated_store == kallocated());</pre>\n<p>它们应该相等吧&#xff0c;但是在user_main = forktree的时候&#xff0c;我print出来的时候它们相差2&#xff0c;也就是说有2个page没有free。</p>\n<p>不知道这是因为什么&#xff1f;</p>\n<p>usermain的修改方法详见<a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=801\" target=\"_blank\">杨志灿给出的解决方法</a>。</p>", "anon": "no", "subject": "为何有空间没有被释放&#xff1f;", "uid": "i0f24oie8102cr", "created": "2016-04-22T09:18:29Z"}, {"content": "<p>在proc.c 中 init_main中&#xff1a;&#xff08;lab5&#xff09;</p>\n<pre>static int\ninit_main(void *arg) {\n    size_t nr_free_pages_store = nr_free_pages();\n    size_t kernel_allocated_store = kallocated();\n\n    int pid = kernel_thread(user_main, NULL, 0);\n    if (pid &lt;= 0) {\n        panic(&#34;create user_main failed.\\n&#34;);\n    }\n\n    while (do_wait(0, NULL) == 0) {\n        schedule();\n    }\n\n    cprintf(&#34;all user-mode processes have quit.\\n&#34;);\n    assert(initproc-&gt;cptr == NULL &amp;&amp; initproc-&gt;yptr == NULL &amp;&amp; initproc-&gt;optr == NULL);\n    assert(nr_process == 2);\n    assert(list_next(&amp;proc_list) == &amp;(initproc-&gt;list_link));\n    assert(list_prev(&amp;proc_list) == &amp;(initproc-&gt;list_link));\n    //assert(nr_free_pages_store == nr_free_pages());\n    //assert(kernel_allocated_store == kallocated());\n    cprintf(&#34;init check memory pass.\\n&#34;);\n    return 0;\n}</pre>\n<p>注释掉的有</p>\n<pre>assert(kernel_allocated_store == kallocated());</pre>\n<p>它们应该相等吧&#xff0c;但是在user_main = forktree的时候&#xff0c;我print出来的时候它们相差2&#xff0c;也就是说有2个page没有free。</p>\n<p>不知道这是因为什么&#xff1f;</p>\n<p>usermain的修改方法详见杨志灿给出的解决方法。</p>", "anon": "no", "subject": "为何有空间没有被释放&#xff1f;", "uid": "i0f24oie8102cr", "created": "2016-04-22T09:17:18Z"}, {"content": "<p>在proc.c 中 init_main中&#xff1a;</p>\n<pre>static int\ninit_main(void *arg) {\n    size_t nr_free_pages_store = nr_free_pages();\n    size_t kernel_allocated_store = kallocated();\n\n    int pid = kernel_thread(user_main, NULL, 0);\n    if (pid &lt;= 0) {\n        panic(&#34;create user_main failed.\\n&#34;);\n    }\n\n    while (do_wait(0, NULL) == 0) {\n        schedule();\n    }\n\n    cprintf(&#34;all user-mode processes have quit.\\n&#34;);\n    assert(initproc-&gt;cptr == NULL &amp;&amp; initproc-&gt;yptr == NULL &amp;&amp; initproc-&gt;optr == NULL);\n    assert(nr_process == 2);\n    assert(list_next(&amp;proc_list) == &amp;(initproc-&gt;list_link));\n    assert(list_prev(&amp;proc_list) == &amp;(initproc-&gt;list_link));\n    //assert(nr_free_pages_store == nr_free_pages());\n    //assert(kernel_allocated_store == kallocated());\n    cprintf(&#34;init check memory pass.\\n&#34;);\n    return 0;\n}</pre>\n<p>注释掉的有</p>\n<pre>assert(kernel_allocated_store == kallocated());</pre>\n<p>它们应该相等吧&#xff0c;但是我print出来的时候它们相差2&#xff0c;也就是说有2个page没有free。</p>\n<p>不知道这是因为什么&#xff1f;</p>", "anon": "no", "subject": "为何有空间没有被释放&#xff1f;", "uid": "i0f24oie8102cr", "created": "2016-04-22T09:15:20Z"}]}, "error": null}