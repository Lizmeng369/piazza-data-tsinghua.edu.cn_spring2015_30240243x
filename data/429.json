{"error": null, "result": {"nr": 429, "upvote_ids": [], "change_log": [{"type": "create", "when": "2015-05-16T10:54:49Z", "uid": "i9qwspt3zkF", "data": "i9qx34yrm2044o", "anon": "no"}, {"type": "update", "when": "2015-05-17T08:10:50Z", "uid": "i9qwspt3zkF", "data": "i9s6o3ud8m82fc", "anon": "no"}, {"uid": "hcrrjuyequh4bt", "to": "i9qx34yo20x44n", "when": "2015-05-17T12:26:06Z", "anon": "no", "data": "i9sfse00ivu2th", "type": "i_answer"}, {"type": "followup", "to": "i9qx34yo20x44n", "when": "2015-05-17T15:00:05Z", "uid": "hdjonbiyfs62ie", "anon": "no"}], "q_edits": [], "i_edits": [], "unique_views": 56, "bookmarked": 3, "config": {}, "history": [{"subject": "关于非抢占式调度的一个疑问", "content": "<p></p><div>\n<div>下面一段话摘自 page 153, Modern Operating Systems, 4th edition, A. S. Tanenbaum</div>\n<div></div>\n<div>\n<div>If a hardware clock provides periodic interrupts at 50 or 60 Hz or some other</div>\n<div>frequency, a scheduling decision can be made at each clock interrupt or at every</div>\n<div><i>k</i>th clock interrupt. Scheduling algorithms can be divided into two categories with</div>\n</div>\n</div>\n<div>\n<div>respect to how they deal with clock interrupts. A nonpreemptive scheduling algorithm</div>\n<div>picks a process to run and then just lets it run until it blocks (either on I/O or</div>\n<div>waiting for another process) or voluntarily releases the CPU. Even if it runs for</div>\n<div>many hours, it will not be forcibly suspended. In effect, no scheduling decisions</div>\n<div>are made during clock interrupts. <b>After clock-interrupt processing has been finished,</b></div>\n<div><b>the process that was running before the interrupt is resumed, unless a</b></div>\n<div><b>higher-priority process was waiting for a now-satisfied timeout.</b></div>\n</div>\n<div><b> </b></div>\n<div>加粗部分不是很明白。</div>\n<div></div>\n<div></div>\n<div><span style=\"font-size:medium\">前面说不会被强制挂起&#xff0c;而后又说时钟中断处理后&#xff08;以固定的周期触发&#xff09;&#xff0c;如果有个更高</span></div>\n<div><span style=\"font-size:medium\">优先级的timeout了&#xff0c;</span>高优先级的会运行&#xff08;unless ...&#xff09;。这样不是就等效于被高优先级的抢占了&#xff1f;</div>\n<div> </div>\n<div> </div>\n<div> </div>\n<div><span style=\"font-family:&#34;Helvetica Neue&#34;,&#34;Helvetica&#34;,&#34;Arial&#34;,sans-serif;color:#333333\">下面是一段维基百科的话[</span><a href=\"http://en.wikipedia.org/wiki/Nonpreemptive_multitasking\" target=\"_blank\">http://en.wikipedia.org/wiki/Nonpreemptive_multitasking</a>]</div>\n<div><span style=\"font-family:&#34;Helvetica Neue&#34;,&#34;Helvetica&#34;,&#34;Arial&#34;,sans-serif;color:#333333\"> </span></div>\n<div><b>Nonpreemptive multitasking</b> is a style of <a href=\"http://en.wikipedia.org/wiki/Computer_multitasking\" target=\"_blank\">computer multitasking</a> in which the operating system never initiates a </div>\n<div><a href=\"http://en.wikipedia.org/wiki/Context_switch\" target=\"_blank\">context switch</a> from a running <a href=\"http://en.wikipedia.org/wiki/Process_%28computing%29\" target=\"_blank\">process</a> to another process. Such systems are either statically <a href=\"http://en.wikipedia.org/wiki/Scheduling_%28computing%29\" target=\"_blank\">scheduled</a>, most </div>\n<div>often periodic systems, or exhibit some form of <a href=\"http://en.wikipedia.org/wiki/Co-operative_multitasking\" target=\"_blank\">cooperative multitasking</a>, in which case the computational tasks</div>\n<div> can self-interrupt and voluntarily give control to other tasks. When non preemptive is used, <b>a process that receives</b></div>\n<div><b> such resources can not be interrupted until it is finished.</b></div>\n<p><b> </b></p>", "created": "2015-05-17T08:10:50Z", "uid": "i9qwspt3zkF", "anon": "no"}, {"subject": "关于非抢占式调度的一个疑问", "content": "<p><img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/i9qwspt3zkF/i9qwxbnro86v/QQ图片20150516184957.png\" /></p>\n<p><img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/i9qwspt3zkF/i9qwy3tchcc2/QQ图片20150516185003.png\" /></p>\n<p>上面两张图片截取自  Page 153, Modern Operating Systems, 4th edition.</p>\n<p></p>\n<p></p>\n<p>前面说不会被强制挂起&#xff0c;而后又说时钟中断处理后&#xff08;以固定的周期触发&#xff09;&#xff0c;如果有个更高优先级的timeout了&#xff0c;高优先级的会运行。这样不是就等效于被高优先级的抢占了&#xff1f;</p>\n<p></p>\n<p></p>\n<p>附维基百科的一段话&#xff1a;</p>\n<p></p>\n<p><img src=\"https://d1b10bmlvqabco.cloudfront.net/attach/i5j09fnsl7k5x0/i9qwspt3zkF/i9qx2dsd4ogn/QQ图片20150516185315.png\" /></p>", "created": "2015-05-16T10:54:49Z", "uid": "i9qwspt3zkF", "anon": "no"}], "data": {"embed_links": []}, "request_instructor_me": false, "folders": ["课堂问答"], "type": "question", "tag_good": [{"class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0"], "admin": true, "role": "instructor", "facebook_id": null, "us": false, "name": "Yong XIANG", "id": "hdjonbiyfs62ie", "photo": null}, {"class_sections": ["清华学生_i5j09fnsl7k5x0"], "admin": false, "role": "student", "facebook_id": null, "us": false, "name": "何蔚然", "id": "i6uehul84wh3p1", "photo": null}], "no_answer": 0, "created": "2015-05-16T10:54:49Z", "t": 1433500530918, "id": "i9qx34yo20x44n", "status": "active", "tag_good_arr": ["hdjonbiyfs62ie", "i6uehul84wh3p1"], "default_anonymity": "no", "my_favorite": false, "bucket_order": 2, "is_bookmarked": false, "is_tag_good": false, "bucket_name": "Today", "no_answer_followup": 0, "children": [{"folders": [], "bucket_order": 2, "config": {}, "history": [{"subject": "", "content": "<p>我觉得你的理解的很明白。我觉得 nonpreemptive scheduling  就是维基百科的话。</p>\n<p>Tanenbaum的那一段把事情搅在一起了&#xff0c;把nonpreemptive scheduling和preemptive scheduling有点搞混了。</p>", "created": "2015-05-17T12:26:06Z", "uid": "hcrrjuyequh4bt", "anon": "no"}], "data": {"embed_links": []}, "bucket_name": "Today", "is_tag_endorse": false, "children": [], "tag_endorse": [{"admin": false, "role": "student", "facebook_id": null, "us": false, "name": "Jekton", "id": "i9qwspt3zkF", "photo": null}], "tag_endorse_arr": ["i9qwspt3zkF"], "created": "2015-05-17T12:26:06Z", "id": "i9sfsdzxq472tg", "type": "i_answer"}, {"no_upvotes": 0, "uid": "hdjonbiyfs62ie", "bucket_name": "Last week", "bucket_order": 5, "updated": "2015-05-17T15:00:05Z", "config": {}, "anon": "no", "data": {"embed_links": null}, "folders": [], "subject": "<p>你看得很仔细&#xff0c;我认为书上写的是不对的。非抢先说的是执行到主动放弃&#xff0c;并没有说等待结束后&#xff0c;进程能暂停正在执行的进程。通常对非抢先的解释是&#xff0c;1&#xff09;当前进程执行到主动放弃&#xff1b;2&#xff09;下一个执行进程从就绪队列中按调度算法的规则选。</p>", "children": [], "type": "followup", "no_answer": 0, "created": "2015-05-17T15:00:05Z", "id": "i9slaethwlq2fu"}], "request_instructor": 0, "tags": ["student", "课堂问答"], "s_edits": [], "num_favorites": 0}, "aid": "iajh7co69xw7l"}