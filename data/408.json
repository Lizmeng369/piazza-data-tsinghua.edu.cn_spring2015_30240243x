{"error": null, "result": {"nr": 408, "upvote_ids": [], "change_log": [{"type": "create", "when": "2015-05-09T16:20:08Z", "uid": "i74g3aomM8b", "data": "i9h8mjncusd7od", "anon": "no"}, {"type": "followup", "to": "i9h8mjnacz67oc", "when": "2015-05-10T16:42:44Z", "uid": "i6ucxgbeel362h", "anon": "no"}, {"type": "feedback", "to": "i9h8mjnacz67oc", "when": "2015-05-11T01:14:02Z", "uid": "i74g3aomM8b", "anon": "no"}, {"type": "update", "when": "2015-05-11T01:14:44Z", "uid": "i74g3aomM8b", "data": "i9j75w0gg352re", "anon": "no"}], "q_edits": [], "i_edits": [], "unique_views": 55, "bookmarked": 3, "config": {}, "history": [{"subject": "lab3_result中kern/mm/vmm.c的一个bug", "content": "<p>要在do_pgfault换入页面之后的421行swap_map_swappable后面要加入page-&gt;pra_vaddr = addr来更新页面对应的虚拟地址</p>\n<p>不然的话在_fifo_check_swap的最后加入如下语句便会报错&#xff1a;</p>\n<p>    cprintf(&#34;write Virt Page e in fifo_check_swap\\n&#34;);<br />    *(unsigned char *)0x5000 = 0x0e;<br />    assert(pgfault_num==10);<br />    cprintf(&#34;write Virt Page a in fifo_check_swap\\n&#34;);<br />    assert(*(unsigned char *)0x1000 == 0x0a);<br />    *(unsigned char *)0x1000 = 0x0a;<br />    assert(pgfault_num==11);<br /><br /></p>", "created": "2015-05-11T01:14:44Z", "uid": "i74g3aomM8b", "anon": "no"}, {"subject": "lab3_result中kern/mm/vmm.c的一个bug", "content": "<p>要在do_pgfault换入页面之后的421行swap_map_swappable后面要加入page-&gt;pra_vaddr = addr来更新页面对应的虚拟地址</p>\n<p>不然的话在_fifo_check_swap的最后加入如下语句便会报错&#xff1a;</p>\n<p>    cprintf(&#34;write Virt Page e in fifo_check_swap\\n&#34;);<br />    *(unsigned char *)0x5000 = 0x0e;<br />    assert(pgfault_num==10);<br />    cprintf(&#34;write Virt Page a in fifo_check_swap\\n&#34;);<br />    assert(*(unsigned char *)0x1000 == 0x0a);<br />    *(unsigned char *)0x1000 = 0x0a;<br />    assert(pgfault_num==11);<br /><br /></p>", "created": "2015-05-09T16:20:08Z", "uid": "i74g3aomM8b", "anon": "no"}], "data": {"embed_links": []}, "request_instructor_me": false, "folders": ["lab3"], "type": "note", "tag_good": [], "tag_good_arr": [], "created": "2015-05-09T16:20:08Z", "t": 1433500504067, "id": "i9h8mjnacz67oc", "status": "active", "default_anonymity": "no", "my_favorite": false, "bucket_order": 2, "is_bookmarked": false, "is_tag_good": false, "bucket_name": "Today", "no_answer_followup": 0, "children": [{"no_upvotes": 0, "uid": "i6ucxgbeel362h", "bucket_name": "Yesterday", "bucket_order": 3, "updated": "2015-05-10T16:42:44Z", "config": {}, "d-bucket": "Yesterday", "data": {"embed_links": null}, "anon": "no", "folders": [], "subject": "<p>报什么错&#xff1f;另外0x1000为什么先assert后赋值</p>", "children": [{"uid": "i74g3aomM8b", "bucket_name": "Today", "bucket_order": 2, "updated": "2015-05-11T01:14:02Z", "config": {}, "anon": "no", "data": {"embed_links": null}, "folders": [], "subject": "<p>本来确实是不报错的&#xff0c;但那是因为检测不严格&#xff0c;加入上面的检测代码后便会报错&#xff0c;错误出在assert(*(unsigned char *)0x1000 == 0x0a);</p>\n<p>主要问题是之前没有将pra_vaddr设置好&#xff0c;换出的时候不能将其值存在正确地方&#xff0c;导致换出的时候得到的结果不对</p>\n<p>之前的测试只是测试能不能对内存中不存在的页进行写操作&#xff0c;没有测试换出再换入之后的值还是不是原来的值</p>\n<p>其实把这个判断去掉依然会报错&#xff0c;不过加上这个判断更清楚一些</p>", "children": [], "type": "feedback", "created": "2015-05-11T01:14:02Z", "id": "i9j74zmaef438l"}], "type": "followup", "no_answer": 0, "created": "2015-05-10T16:42:44Z", "id": "i9iovghcy0y7oi"}], "request_instructor": 0, "tags": ["lab3", "student"], "s_edits": [], "num_favorites": 0}, "aid": "iajh6rybiz013c"}